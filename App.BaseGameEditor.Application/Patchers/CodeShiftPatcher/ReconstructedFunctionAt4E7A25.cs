using System;
using System.Collections.Generic;
using System.Linq;
using App.BaseGameEditor.Application.Patchers.CodeShiftPatcher.Sponsor;

namespace App.BaseGameEditor.Application.Patchers.CodeShiftPatcher
{
    public class ReconstructedFunctionAt4E7A25
    {
        private readonly EntityData _entityData;

        public ReconstructedFunctionAt4E7A25(EntityData entityData)
        {
            _entityData = entityData ?? throw new ArgumentNullException(nameof(entityData));
        }

        public byte[] GetInstructions()
        {
            var functionStartInstructions = new byte[]
            {
                0x55,
                0x8B, 0xEC,
                0x83, 0xEC, 0x10,
                0x53,
                0x56,
                0x57,
            };

            var entityInstructions = _entityData.GetInstructions();
            var cashRatingInstructions = CashRatingData.GetInstructions();
            var radRatingInstructions = RadRatingData.GetInstructions();
            var inactiveInstructions = InactiveData.GetInstructions();

            var relocationInstructions = new byte[]
            {
                0xE8, 0x29, 0x80, 0xF1, 0xFF,
            };

            var loopInstructions = new byte[]
            {
                0xC7, 0x45, 0xF8, 0x01, 0x00, 0x00, 0x00,
                0xE9, 0x03, 0x00, 0x00, 0x00,
                0xFF, 0x45, 0xF8,
                0x83, 0x7D, 0xF8, 0x62,
                0x0F, 0x8F, 0x4A, 0x02, 0x00, 0x00,
                0xC7, 0x45, 0xFC, 0x00, 0x00, 0x00, 0x00,
                0xC7, 0x45, 0xF0, 0x01, 0x00, 0x00, 0x00,
                0xE9, 0x03, 0x00, 0x00, 0x00,
                0xFF, 0x45, 0xF0,
                0x83, 0x7D, 0xF0, 0x0B,
                0x0F, 0x8F, 0x80, 0x01, 0x00, 0x00,
                0x8B, 0x45, 0xF8,
                0x8B, 0xC8,
                0xC1, 0xE0, 0x03,
                0x8D, 0x04, 0x40,
                0x8D, 0x04, 0x81,
                0x8D, 0x04, 0x81,
                0x8B, 0x4D, 0xF0,
                0xC1, 0xE1, 0x02,
                0xC7, 0x84, 0x81, 0x3C, 0x60, 0x7E, 0x00, 0xCF, 0x07, 0x00, 0x00,
                0x8B, 0x45, 0xF8,
                0x8B, 0xC8,
                0xC1, 0xE0, 0x03,
                0x8D, 0x04, 0x40,
                0x8D, 0x04, 0x81,
                0x8D, 0x04, 0x81,
                0x8B, 0x4D, 0xF0,
                0xC1, 0xE1, 0x02,
                0x83, 0xBC, 0x81, 0x9C, 0x5F, 0x7E, 0x00, 0x00,
                0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,
                0xE9, 0x34, 0x01, 0x00, 0x00,
                0x8B, 0x45, 0xF8,
                0x8B, 0xC8,
                0xC1, 0xE0, 0x03,
                0x8D, 0x04, 0x40,
                0x8D, 0x04, 0x81,
                0x8D, 0x04, 0x81,
                0x8B, 0x4D, 0xF0,
                0xC1, 0xE1, 0x02,
                0x8B, 0x84, 0x81, 0x9C, 0x5F, 0x7E, 0x00,
                0x89, 0x45, 0xF4,
                0x8B, 0x45, 0xF8,
                0x8B, 0xC8,
                0xC1, 0xE0, 0x03,
                0x8D, 0x04, 0x40,
                0x8D, 0x04, 0x81,
                0x8D, 0x04, 0x81,
                0x8A, 0x04, 0x85, 0xB2, 0x5C, 0x7E, 0x00,
                0x25, 0xFF, 0x00, 0x00, 0x00,
                0x83, 0xF8, 0x05,
                0x0F, 0x85, 0xA9, 0x00, 0x00, 0x00,
                0x8B, 0x45, 0xF8,
                0x8B, 0x4D, 0xF4,
                0x8B, 0xD1,
                0x8D, 0x0C, 0xC9,
                0x8D, 0x0C, 0xC9,
                0x8D, 0x0C, 0x4A,
                0x8D, 0x0C, 0x49,
                0xC1, 0xE1, 0x04,
                0x83, 0xBC, 0x81, 0xDC, 0x33, 0x20, 0x01, 0x01,
                0x0F, 0x85, 0x43, 0x00, 0x00, 0x00,
                0x8B, 0x45, 0xF4,
                0x8B, 0xC8,
                0x8D, 0x04, 0xC0,
                0x8D, 0x04, 0xC0,
                0x8D, 0x04, 0x41,
                0x8D, 0x04, 0x40,
                0xC1, 0xE0, 0x04,
                0x83, 0xB8, 0x90, 0x30, 0x20, 0x01, 0x00,
                0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,
                0x8B, 0x45, 0xF8,
                0x8B, 0x4D, 0xF4,
                0x8B, 0xD1,
                0x8D, 0x0C, 0xC9,
                0x8D, 0x0C, 0xC9,
                0x8D, 0x0C, 0x4A,
                0x8D, 0x0C, 0x49,
                0xC1, 0xE1, 0x04,
                0x89, 0x81, 0x90, 0x30, 0x20, 0x01,
                0xE9, 0xF8, 0xFE, 0xFF, 0xFF,
                0x8B, 0x45, 0xF8,
                0x8B, 0x4D, 0xF8,
                0x8B, 0x55, 0xF4,
                0x8B, 0xDA,
                0x8D, 0x14, 0xD2,
                0x8D, 0x14, 0xD2,
                0x8D, 0x14, 0x53,
                0x8D, 0x14, 0x52,
                0xC1, 0xE2, 0x04,
                0x8B, 0x8C, 0x8A, 0xDC, 0x33, 0x20, 0x01,
                0x8B, 0x55, 0xF4,
                0x8B, 0xDA,
                0x8D, 0x14, 0xD2,
                0x8D, 0x14, 0xD2,
                0x8D, 0x14, 0x53,
                0x8D, 0x14, 0x52,
                0xC1, 0xE2, 0x04,
                0x89, 0x84, 0x8A, 0x8C, 0x30, 0x20, 0x01,
                0xE9, 0x3C, 0x00, 0x00, 0x00,
                0x8B, 0x45, 0xF8,
                0x8B, 0x4D, 0xF8,
                0x8B, 0xD1,
                0xC1, 0xE1, 0x03,
                0x8D, 0x0C, 0x49,
                0x8D, 0x0C, 0x8A,
                0x8D, 0x0C, 0x8A,
                0x8A, 0x0C, 0x8D, 0xB2, 0x5C, 0x7E, 0x00,
                0x81, 0xE1, 0xFF, 0x00, 0x00, 0x00,
                0x8B, 0x55, 0xF4,
                0x8B, 0xDA,
                0x8D, 0x14, 0xD2,
                0x8D, 0x14, 0xD2,
                0x8D, 0x14, 0x53,
                0x8D, 0x14, 0x52,
                0xC1, 0xE2, 0x04,
                0x89, 0x84, 0x8A, 0x8C, 0x30, 0x20, 0x01,
                0xFF, 0x45, 0xFC,
                0xE9, 0x73, 0xFE, 0xFF, 0xFF,
                0x8B, 0x45, 0xFC,
                0x8B, 0x4D, 0xF8,
                0x8B, 0xD1,
                0xC1, 0xE1, 0x03,
                0x8D, 0x0C, 0x49,
                0x8D, 0x0C, 0x8A,
                0x8D, 0x0C, 0x8A,
                0x89, 0x04, 0x8D, 0x34, 0x60, 0x7E, 0x00,
                0x8B, 0x45, 0xF8,
                0x8B, 0xC8,
                0xC1, 0xE0, 0x03,
                0x8D, 0x04, 0x40,
                0x8D, 0x04, 0x81,
                0x8D, 0x04, 0x81,
                0xC7, 0x04, 0x85, 0x38, 0x60, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x8B, 0x45, 0xF8,
                0x50,
                0x6A, 0x01,
                0xE8, 0x4C, 0x15, 0x00, 0x00,
                0x83, 0xC4, 0x08,
                0x8B, 0x45, 0xF8,
                0x8B, 0xC8,
                0xC1, 0xE0, 0x03,
                0x8D, 0x04, 0x40,
                0x8D, 0x04, 0x81,
                0x8D, 0x04, 0x81,
                0x8B, 0x04, 0x85, 0xE4, 0x5C, 0x7E, 0x00,
                0x8B, 0x4D, 0xF8,
                0x8B, 0xD1,
                0xC1, 0xE1, 0x03,
                0x8D, 0x0C, 0x49,
                0x8D, 0x0C, 0x8A,
                0x8D, 0x0C, 0x8A,
                0x89, 0x04, 0x8D, 0xE8, 0x5C, 0x7E, 0x00,
                0x8B, 0x45, 0xF8,
                0x8B, 0xC8,
                0xC1, 0xE0, 0x03,
                0x8D, 0x04, 0x40,
                0x8D, 0x04, 0x81,
                0x8D, 0x04, 0x81,
                0x8B, 0x04, 0x85, 0x6C, 0x60, 0x7E, 0x00,
                0x8B, 0x4D, 0xF8,
                0x8B, 0xD1,
                0xC1, 0xE1, 0x03,
                0x8D, 0x0C, 0x49,
                0x8D, 0x0C, 0x8A,
                0x8D, 0x0C, 0x8A,
                0x89, 0x04, 0x8D, 0x78, 0x60, 0x7E, 0x00,
                0xE9, 0xA9, 0xFD, 0xFF, 0xFF,
                0xC7, 0x45, 0xF8, 0x01, 0x00, 0x00, 0x00,
                0xE9, 0x03, 0x00, 0x00, 0x00,
                0xFF, 0x45, 0xF8,
                0x83, 0x7D, 0xF8, 0x0B,
                0x0F, 0x8F, 0x67, 0x00, 0x00, 0x00,
                0xC7, 0x45, 0xF0, 0x01, 0x00, 0x00, 0x00,
                0xE9, 0x03, 0x00, 0x00, 0x00,
                0xFF, 0x45, 0xF0,
                0x83, 0x7D, 0xF0, 0x0A,
                0x0F, 0x8F, 0x49, 0x00, 0x00, 0x00,
                0x8B, 0x45, 0xF0,
                0x8B, 0x4D, 0xF8,
                0x8B, 0xD1,
                0x8D, 0x0C, 0xC9,
                0x8D, 0x0C, 0xC9,
                0x8D, 0x0C, 0x4A,
                0x8D, 0x0C, 0x49,
                0xC1, 0xE1, 0x04,
                0xC7, 0x84, 0x81, 0x50, 0x32, 0x20, 0x01, 0x01, 0x00, 0x00, 0x00,
                0x8B, 0x45, 0xF0,
                0x8B, 0x4D, 0xF8,
                0x8B, 0xD1,
                0x8D, 0x0C, 0xC9,
                0x8D, 0x0C, 0xC9,
                0x8D, 0x0C, 0x4A,
                0x8D, 0x0C, 0x49,
                0xC1, 0xE1, 0x04,
                0xC7, 0x84, 0x81, 0x24, 0x32, 0x20, 0x01, 0x01, 0x00, 0x00, 0x00,
                0xE9, 0xAA, 0xFF, 0xFF, 0xFF,
                0xE9, 0x8C, 0xFF, 0xFF, 0xFF,
            };

            var functionEndInstructions = new byte[]
            {
                0x5F,
                0x5E,
                0x5B,
                0xC9,
                0xC3,
            };

            var instructionModules = new List<byte[]>
            {
                functionStartInstructions,
                entityInstructions,
                cashRatingInstructions,
                radRatingInstructions,
                inactiveInstructions,
                relocationInstructions,
                loopInstructions,
                functionEndInstructions
            };

            return JoinInstructionModules(instructionModules);
        }

        private static byte[] JoinInstructionModules(IReadOnlyCollection<byte[]> instructionModules)
        {
            var arrayLength = instructionModules.Sum(item => item.Length);
            var result = new byte[arrayLength];

            var index = 0;
            foreach (var instructionModule in instructionModules)
            {
                foreach (var @byte in instructionModule)
                {
                    result[index] = @byte;
                    index++;
                }
            }

            return result;
        }
    }
}